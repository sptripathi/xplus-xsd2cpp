#!/bin/sh

#
# This file is part of XmlPlus package
# 
# Copyright (C)   2010   Satya Prakash Tripathi
#
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

INST_BIN_DIR=@bindir@
INST_LIB_DIR=@libdir@
INST_INCL_DIR=@includedir@
XSD2CPP_XSL_PATH=$INST_BIN_DIR/xsl/xsd2cpp.xsl

MKDIR=`which mkdir`
XSLTPROC=`which xsltproc`
BASENAME=`which basename`
SED=`which sed`
CUT=`which cut`
FIND=`which find`
GREP=`which grep`
AWK=`which awk`
CP=`which cp`
MV=`which mv`
RM=`which rm`
CAT=`which cat`
GETOPT=`which getopt`
DIRNAME=`which dirname`

OUTDIR=""
XSD=""
XSDNAME=""
VALID_XSDTOKEN=""
PATH=""
CWD=""
ABSPATH=""
GEN_XSD_SOURCES=""
GEN_XSD_INCLUDES=""
NSALIASES_FILE="none"
XPLUS_META_DIR=""


get_abs_path()
{
  if [ "${PATH:0:1}" == "/" ]; then
    ABSPATH=$PATH
  else
    ABSPATH=`pwd`/$PATH
  fi
}

init()
{
  XSDNAME=`$BASENAME $XSD | $CUT -d'.' -f1`
  # token should be valid for Makefile targets and for directory name
  # eg. '-' is valid for dir-name but not valid as Makefile target
  VALID_XSDTOKEN=`echo $XSDNAME | $SED -e's/-/_/g'`
  
  if [ -z "$OUTDIR" ]; then
    OUTDIR=$VALID_XSDTOKEN
  fi

  CWD=`pwd`
  
  echo
  echo "output path: $OUTDIR"
  
  PATH=$XSD
  get_abs_path
  ABSXSD=$ABSPATH

  PATH=$XSD2CPP_XSL_PATH
  get_abs_path
  XSD2CPP_XSL_PATH=$ABSPATH

  XPLUS_META_DIR=$CWD/.xplusmeta
}

cleanup_meta()
{
  $RM -f $XPLUS_META_DIR/*
}

gen_source_files()
{
  BACKUP_DIR=""
  PID=$$
  if [ "$OUTDIR" = "." ] || [  "$OUTDIR" = ".." ]; then
    
    BACKUP_DIR=$OUTDIR/xplus.bak.$PID

    if [ -e "$OUTDIR/src" ]; then
      echo "* the directory $OUTDIR/src already exists, backing up in $BACKUP_DIR"
      $MKDIR -p $BACKUP_DIR
      $MV "$OUTDIR/src" $BACKUP_DIR/
    fi
    if [ -e "$OUTDIR/include" ]; then
      echo "* the directory $OUTDIR/include already exists, backing up in $BACKUP_DIR"
      $MKDIR -p $BACKUP_DIR
      $MV "$OUTDIR/include" $BACKUP_DIR/
    fi

  else
    BACKUP_DIR=xplus.bak.$PID
    if [ -e "$OUTDIR" ]; then
      echo "* the directory $OUTDIR already exists, backing up in $BACKUP_DIR"
      $MKDIR -p $BACKUP_DIR
      $MV "$OUTDIR" $BACKUP_DIR/
    fi
    $MKDIR $OUTDIR
  fi
    
  $RM -rf $BACKUP_DIR/*
  
  echo
  echo "=>  Generating source files..."

  # generate the xsd-to-sources
  cd $OUTDIR
  XSDDIR=`$DIRNAME $ABSXSD`
  if [ -f $XSDDIR/nsaliases.xml ]; then
    NSALIASES_FILE=$XSDDIR/nsaliases.xml
  fi

  $MKDIR -p $XPLUS_META_DIR
  XSLTPROC_OPTIONS="--stringparam input_doc $ABSXSD --stringparam CWD $CWD --stringparam w3cXmlSchema false --stringparam NSALIASES_FILE $NSALIASES_FILE "
  $XSLTPROC $XSLTPROC_OPTIONS $XSD2CPP_XSL_PATH $ABSXSD > $XPLUS_META_DIR/log 2>&1
  ret=$?

  $CAT $XPLUS_META_DIR/log | $GREP -v xplusmeta
  
  if [ $ret -ne 0 ]; then
    cleanup_meta
    exit $ret
  fi

  #beautify
  for file in `$FIND include/ -name "*.h"`
  do
    tmpFile=/tmp/`$BASENAME $file`.tmp
    $SED -e 's/MEMBER_VAR //g' -e 's/MEMBER_FN //g' \
         -e 's/XMARKER //g' \
         $file > $tmpFile
    $MV $tmpFile $file
  done

  ## no need to beautify the cpp files
  #for file in `$FIND $OUTDIR/src/ -name "*.cpp"`
  #do
  #  tmpFile=/tmp/`$BASENAME $file`.tmp
  #  $SED -e 's/MEMBER_VAR //g' -e 's/MEMBER_FN //g' $file > $tmpFile
  #  $MV $tmpFile $file
  #done
    

  # create main.cpp if it doesnt exist already
  if [ ! -e  main.cpp ]; then
    $MV main.cpp.template main.cpp
  fi
  
  #GEN_XSD_SOURCES=`cd src && $FIND . -name "*.cpp" | $GREP -v "main\.cpp"`
  GEN_XSD_SOURCES=`cd src && $FIND . -name "*.cpp" | $AWK '/$/{printf "%s ", $0;next}{print}'`
  GEN_XSD_INCLUDES=`cd include && $FIND . -name "*.h" | $AWK '/$/{printf "%s ", $0;next}{print}'`
  cd - > /dev/null 2>&1
}

gen_automake_files()
{
  echo "=>  Generating automake/autoconf files ..."

  MAKE_TMPL_DIR=$INST_BIN_DIR/makeTmpl
  CONFIG_AC_FILE=$MAKE_TMPL_DIR/configure.ac
  MAKE_AM_TOP_SRC_DIR_FILE=$MAKE_TMPL_DIR/Makefile.am.top_srcdir
  MAKE_AM_SRC_DIR_FILE=$MAKE_TMPL_DIR/Makefile.am.src
  MAKE_AM_INC_DIR_FILE=$MAKE_TMPL_DIR/Makefile.am.include

  $SED -e "s/@xsdname@/$VALID_XSDTOKEN/g" $CONFIG_AC_FILE > $OUTDIR/configure.ac
  $SED -e "s/@xsdname@/$VALID_XSDTOKEN/g" $MAKE_AM_TOP_SRC_DIR_FILE > $OUTDIR/Makefile.am
  $SED -e "s/@xsdname@/$VALID_XSDTOKEN/g" $MAKE_AM_SRC_DIR_FILE > $OUTDIR/src/Makefile.am
  $CP $MAKE_AM_INC_DIR_FILE  $OUTDIR/include/Makefile.am
  $CP $MAKE_TMPL_DIR/acinclude.m4 $OUTDIR/
  $CP $MAKE_TMPL_DIR/aminclude.am $OUTDIR/
  $CP $MAKE_TMPL_DIR/doxygen.cfg $OUTDIR/
  #$SED -e "s/@genxsdsources@/$GEN_XSD_SOURCES/g" $MAKE_AM_SRC_DIR_FILE > $OUTDIR/src/Makefile.am
  echo "$GEN_XSD_SOURCES" >> $OUTDIR/src/Makefile.am
  echo "$GEN_XSD_INCLUDES" >> $OUTDIR/include/Makefile.am
  $CP $MAKE_TMPL_DIR/autogen.sh $OUTDIR/autogen.sh
}


run()
{
  cleanup_meta
  gen_source_files
  gen_automake_files
  echo
  cleanup_meta
}


print_usage()
{
  echo "Usage:"
  echo
  echo "1.  xsd2cpp xsd-file [outdir]"
  echo "      outdir: directory to output the generated source, like foo, . , .. etc."
  echo "      (if unspecified, defaults to xsd-file-name)"
  echo
  echo "2.  xsd2cpp -v"
  echo "      prints verion"
  echo
  echo "3.  xsd2cpp -h"
  echo "      prints help"
  echo
}

print_version()
{
  $CAT $INST_BIN_DIR/version
}


#main

args=`$GETOPT hv $*`
if [ $? != 0 ]; then
  print_usage
  exit 2
fi
set -- $args
for i
do
  case "$i" in
    -h)
      print_usage
      exit
      shift;;
    -v)
      print_version
      exit
      shift;;
    --)
      shift; break;;
  esac
done

if [ $# -ge 1 ]; then
  XSD=$1
  if [ $# -eq 2 ]; then
    OUTDIR=$2
  fi
else
  print_usage
  exit 2
fi


init
run

